heat_template_version: 2013-05-23

description: This Heat Template will create Kubernetes cluster with one main node.

parameters:

  network_cidr:
    type: string
    description: network range for ip network
    default: 10.0.0.0/24


  dns_nameserver:
    type: string
    description: address of a dns nameserver
    default: 8.8.8.8

  node_flavor:
      type: string
      default: m1.small
      description: vm's flavor to use

  server_image:
    type: string
    description: image used to create the server

  ssh_key_name:
    type: string
    description: name of ssh key
    default: lars

  external_network:
    type: string
    description: network used for floating ip addresses



resources:

  k8s_network:
    type: OS::Neutron::Net
    properties:
      name: private

  k8s_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: { get_param: network_cidr }
      network: { get_resource: k8s_network }
      dns_nameservers:
        - { get_param: dns_nameserver }


  k8s_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  k8s_node:
    type: OS::Nova::Server
    properties:
      image: {get_param: server_image}
      flavor: {get_param: node_flavor}
      key_name: {get_param: ssh_key_name}
      networks:
        - port: {get_resource: k8s_port}

  k8s_port:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: k8s_network}
      security_groups:
        - {get_resource: k8s_security_group}
      fixed_ips:
        - subnet: {get_resource: k8s_subnet}
      replacement_policy: AUTO

  k8s_floating:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: k8s_port }

  load_balancer:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get resource: k8s_subnet}


outputs:

  k8s_node_ip:
    value: {get_attr: [k8s_port, fixed_ips, 0, ip_address]}

  k8s_node_external_ip:
    value: {get_attr: [k8s_floating, floating_ip_address]}
